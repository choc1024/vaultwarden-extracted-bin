{"version":3,"file":"968.bca7acbecd5288b0f9ab.js","mappings":"2vBAqBO,MAAMA,EAKX,WAAAC,CACUC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GANA,KAAAN,mBAAAA,EACA,KAAAC,YAAAA,EACA,KAAAC,qBAAAA,EACA,KAAAC,cAAAA,EACA,KAAAC,iBAAAA,EACA,KAAAC,WAAAA,EACA,KAAAC,YAAAA,EAXA,KAAAC,UAAY,IAAI,KAAU,CAClCC,eAAgB,IAAI,KAAY,GAAI,CAAC,KAAWC,aAalD,KAAAC,OAAS,IAAY,EAAD,gCAGlB,GAFAC,KAAKJ,UAAUK,gBAEXD,KAAKJ,UAAUM,QACjB,OAIF,SADyBF,KAAKR,cAAcW,aAG1C,MADAH,KAAKP,iBAAiBW,KAAK,UACrB,IAAIC,MAAM,8DAGlB,MAAMR,EAAiBG,KAAKJ,UAAUU,MAAMT,eAE5C,UACQG,KAAKL,YAAYY,UAAS,GAAO,SAEjCP,KAAKX,mBAAmBmB,8BAA8BX,GAE5DG,KAAKT,qBAAqBkB,UACxB,UACAT,KAAKV,YAAYoB,EAAE,cACnBV,KAAKV,YAAYoB,EAAE,sBACnB,CAAEC,QAAS,OAEbX,KAAKP,iBAAiBW,KAAK,S,CAC3B,MAAOQ,GAEP,MADAZ,KAAKN,WAAWmB,MAAMD,GAChBA,C,CAEV,GAjCG,E,iCAbQzB,GAAoC,+E,mBAApCA,EAAoC,sxBCrBjD,kBACE,iCACE,mCACE,oCAAsD,S,gBAAkC,QACxF,sCAGE,qCACE,U,iBACA,gBAIG,U,iBAAwB,QAE7B,+BACA,iDAA4B,U,iBAAyC,QAErE,oDACE,+CAAW,U,iBAAyB,QACpC,6CAOA,8CACF,+BACA,4CACE,U,iBACF,QACF,6BACF,2BACF,yBACF,uBACA,gB,MApCM,+BAAuB,sBAG+B,iDAKlD,wFAKG,yCAGuB,0DAGf,0CAWX,+E,gBDZE,IAAc,+BAAA2B,EAAA,qDAAqB,iB","sources":["webpack://@bitwarden/web-vault/./src/app/auth/migrate-encryption/migrate-legacy-encryption.component.ts","webpack://@bitwarden/web-vault/./src/app/auth/migrate-encryption/migrate-legacy-encryption.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\nimport { CryptoService } from \"@bitwarden/common/platform/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { SharedModule } from \"../../shared\";\nimport { UserKeyRotationModule } from \"../key-rotation/user-key-rotation.module\";\nimport { UserKeyRotationService } from \"../key-rotation/user-key-rotation.service\";\n\n// The master key was originally used to encrypt user data, before the user key was introduced.\n// This component is used to migrate from the old encryption scheme to the new one.\n@Component({\n  standalone: true,\n  imports: [SharedModule, UserKeyRotationModule],\n  templateUrl: \"migrate-legacy-encryption.component.html\",\n})\nexport class MigrateFromLegacyEncryptionComponent {\n  protected formGroup = new FormGroup({\n    masterPassword: new FormControl(\"\", [Validators.required]),\n  });\n\n  constructor(\n    private keyRotationService: UserKeyRotationService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private syncService: SyncService,\n  ) {}\n\n  submit = async () => {\n    this.formGroup.markAsTouched();\n\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const hasUserKey = await this.cryptoService.hasUserKey();\n    if (hasUserKey) {\n      this.messagingService.send(\"logout\");\n      throw new Error(\"User key already exists, cannot migrate legacy encryption.\");\n    }\n\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    try {\n      await this.syncService.fullSync(false, true);\n\n      await this.keyRotationService.rotateUserKeyAndEncryptedData(masterPassword);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 },\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  };\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <div class=\"tw-mt-12 tw-flex tw-justify-center\">\n    <div class=\"tw-max-w-xl\">\n      <h1 bitTypography=\"h1\" class=\"tw-mb-4 tw-text-center\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n      <div\n        class=\"tw-block tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n      >\n        <p>\n          {{ \"updateEncryptionSchemeDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <bit-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</bit-callout>\n\n        <bit-form-field>\n          <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n          <input\n            id=\"masterPassword\"\n            bitInput\n            type=\"password\"\n            formControlName=\"masterPassword\"\n            appAutofocus\n          />\n          <button type=\"button\" bitIconButton bitSuffix bitPasswordInputToggle></button>\n        </bit-form-field>\n        <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\" block>\n          {{ \"updateEncryptionKey\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n"],"names":["MigrateFromLegacyEncryptionComponent","constructor","keyRotationService","i18nService","platformUtilsService","cryptoService","messagingService","logService","syncService","formGroup","masterPassword","required","submit","this","markAsTouched","invalid","hasUserKey","send","Error","value","fullSync","rotateUserKeyAndEncryptedData","showToast","t","timeout","e","error","U"],"sourceRoot":""}