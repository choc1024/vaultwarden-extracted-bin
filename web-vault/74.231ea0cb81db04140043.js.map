{"version":3,"file":"74.231ea0cb81db04140043.js","mappings":"m6BAII,yB,gBACE,S,gBACF,S,MAF2B,gDACzB,mF,yBAEF,wC,qBACE,wC,0BASI,yB,yBAEE,oBAAc,e,2BANpB,0BACE,2CAAW,S,gBAAyB,QACpC,8CACE,iD,gBACA,yD,kBAMF,+BACF,8B,sBAVa,wCAEG,6CAEI,sD,2BANtB,SACE,uDAYF,2B,oBAZmB,iC,0BAiBf,yB,yBAA4C,uBAAiB,e,0CA+B/D,SACE,wCACE,kDACE,+CAAW,S,gBAA2B,QACtC,+CAOA,iDAKE,mGACD,QACD,gDAAU,U,iBAAwC,QACpD,iCACA,8DACA,iCACF,+BACA,kDACE,+CAAW,U,iBAAkC,QAC7C,8CAOA,+CAKE,mGACD,QACH,+BACF,4B,0BArCiB,0CAaT,6CAEQ,wDAEW,0CAAyB,eAIrC,mDAaT,4C,2BAhER,SACE,kDACE,2CAAW,S,gBAAgC,QAE3C,uDAOE,8CAAW,U,iBAAgC,QAC3C,8CAAU,U,iBAAiD,QAC7D,+BAEA,yDAOE,+CAAW,U,iBAAgC,QAC3C,8CAAU,U,iBAAiD,QAC7D,+BACF,6BAEA,0DAyCF,4B,qBAlEe,+CAMT,+DAGW,iDACD,kEAOV,4DAGW,iDACD,kEAIC,gF,ECvCd,MAAMA,UAAyC,IACpD,WAAAC,CACEC,EACAC,EACAC,EACAC,EACQC,EACRC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAC,MACEX,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,GAlBM,KAAAN,MAAAA,CAoBV,CAEA,oBAAcQ,GACZ,OAAO,CACT,CAEM,QAAAC,G,yGAEJC,KAAKV,MAAMW,OAAOA,OAAOC,OAAOC,WAAiBD,GAAW,EAAD,gCACzDF,KAAKI,eAAiBF,EAAOE,cAC/B,YAEM,EAAML,SAAQ,UACtB,G,CAEA,aAAAM,GACE,OAAOL,KAAKZ,cAAckB,sBACxBN,KAAKI,eACLJ,KAAKO,OACLP,KAAKQ,aAET,CAEA,WAAAC,GACE,OAAOZ,MAAMY,YAAY,MAC3B,CAEM,YAAAC,G,+CACEV,KAAKX,uBAAuBsB,QAChC,KAAUC,iCACV,KACA,KACAZ,KAAKI,eAET,G,mCA5DWpB,GAAgC,+H,mBAAhCA,EAAgC,41CDtB7C,sBAEA,yCACE,kCACE,iDAGA,gEAKA,qD,kBAeA,gDACE,2CAAW,U,iBAAyB,QACpC,8CACE,sDACF,6BACF,2BAEA,wDAsEA,0CAOE,U,iBACF,QACF,yBACF,uBACA,gB,MAhHQ,yCAAwB,sBAC2C,0CAKpE,2CAGY,qDAgBF,0CAEiB,0CAIf,mDA2Eb,8CAEA,iE,+JEtGN,MAAM6B,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAW/B,EACXgC,YAAa,CAAC,KACdC,KAAM,CACJC,QAAS,cACTC,wBAA0BC,GAAsBA,EAAIC,yBAQnD,MAAMC,G,iCAAAA,EAAoC,E,mBAApCA,I,uBAFD,KAAaC,SAASV,MCJ3B,MAAMW,G,iCAAAA,EAA6B,E,mBAA7BA,I,uBAPT,IACA,IACAF,EACA,M","sources":["webpack://@bitwarden/web-vault/./src/app/tools/vault-export/export.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export.module.ts"],"sourcesContent":["<app-header></app-header>\n\n<bit-container>\n  <form [formGroup]=\"exportForm\" [bitSubmit]=\"submit\">\n    <bit-callout type=\"danger\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </bit-callout>\n    <tools-export-scope-callout\n      [organizationId]=\"organizationId\"\n      *ngIf=\"!disabledByPolicy\"\n    ></tools-export-scope-callout>\n\n    <ng-container *ngIf=\"organizations$ | async as organizations\">\n      <bit-form-field *ngIf=\"organizations.length > 0\">\n        <bit-label>{{ \"exportFrom\" | i18n }}</bit-label>\n        <bit-select formControlName=\"vaultSelector\">\n          <bit-option [label]=\"'myVault' | i18n\" value=\"myVault\" icon=\"bwi-user\" />\n          <bit-option\n            *ngFor=\"let o of organizations$ | async\"\n            [value]=\"o.id\"\n            [label]=\"o.name\"\n            icon=\"bwi-business\"\n          />\n        </bit-select>\n      </bit-form-field>\n    </ng-container>\n\n    <bit-form-field>\n      <bit-label>{{ \"fileFormat\" | i18n }}</bit-label>\n      <bit-select formControlName=\"format\">\n        <bit-option *ngFor=\"let f of formatOptions\" [value]=\"f.value\" [label]=\"f.name\" />\n      </bit-select>\n    </bit-form-field>\n\n    <ng-container *ngIf=\"format === 'encrypted_json'\">\n      <bit-radio-group formControlName=\"fileEncryptionType\" aria-label=\"exportTypeHeading\">\n        <bit-label>{{ \"exportTypeHeading\" | i18n }}</bit-label>\n\n        <bit-radio-button\n          id=\"AccountEncrypted\"\n          name=\"fileEncryptionType\"\n          class=\"tw-block\"\n          [value]=\"encryptedExportType.AccountEncrypted\"\n          checked=\"fileEncryptionType === encryptedExportType.AccountEncrypted\"\n        >\n          <bit-label>{{ \"accountRestricted\" | i18n }}</bit-label>\n          <bit-hint>{{ \"accountRestrictedOptionDescription\" | i18n }}</bit-hint>\n        </bit-radio-button>\n\n        <bit-radio-button\n          id=\"FileEncrypted\"\n          name=\"fileEncryptionType\"\n          class=\"tw-block\"\n          [value]=\"encryptedExportType.FileEncrypted\"\n          checked=\"fileEncryptionType === encryptedExportType.FileEncrypted\"\n        >\n          <bit-label>{{ \"passwordProtected\" | i18n }}</bit-label>\n          <bit-hint>{{ \"passwordProtectedOptionDescription\" | i18n }}</bit-hint>\n        </bit-radio-button>\n      </bit-radio-group>\n\n      <ng-container *ngIf=\"fileEncryptionType == encryptedExportType.FileEncrypted\">\n        <div class=\"tw-mb-3\">\n          <bit-form-field>\n            <bit-label>{{ \"filePassword\" | i18n }}</bit-label>\n            <input\n              bitInput\n              type=\"password\"\n              id=\"filePassword\"\n              formControlName=\"filePassword\"\n              name=\"password\"\n            />\n            <button\n              type=\"button\"\n              bitSuffix\n              bitIconButton\n              bitPasswordInputToggle\n              [(toggled)]=\"showFilePassword\"\n            ></button>\n            <bit-hint>{{ \"exportPasswordDescription\" | i18n }}</bit-hint>\n          </bit-form-field>\n          <app-password-strength [password]=\"filePassword\" [showText]=\"true\">\n          </app-password-strength>\n        </div>\n        <bit-form-field>\n          <bit-label>{{ \"confirmFilePassword\" | i18n }}</bit-label>\n          <input\n            bitInput\n            type=\"password\"\n            id=\"confirmFilePassword\"\n            formControlName=\"confirmFilePassword\"\n            name=\"confirmFilePassword\"\n          />\n          <button\n            type=\"button\"\n            bitSuffix\n            bitIconButton\n            bitPasswordInputToggle\n            [(toggled)]=\"showFilePassword\"\n          ></button>\n        </bit-form-field>\n      </ng-container>\n    </ng-container>\n\n    <button\n      bitButton\n      bitFormButton\n      type=\"submit\"\n      buttonType=\"primary\"\n      [disabled]=\"disabledByPolicy\"\n    >\n      {{ \"confirmFormat\" | i18n }}\n    </button>\n  </form>\n</bit-container>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { EventType } from \"@bitwarden/common/enums\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService } from \"@bitwarden/components\";\nimport { VaultExportServiceAbstraction } from \"@bitwarden/vault-export-core\";\n\nimport { ExportComponent } from \"../../../../tools/vault-export/export.component\";\n\n@Component({\n  selector: \"app-org-export\",\n  templateUrl: \"../../../../tools/vault-export/export.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationVaultExportComponent extends ExportComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: VaultExportServiceAbstraction,\n    eventCollectionService: EventCollectionService,\n    private route: ActivatedRoute,\n    policyService: PolicyService,\n    logService: LogService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService,\n    dialogService: DialogService,\n    organizationService: OrganizationService,\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventCollectionService,\n      policyService,\n      logService,\n      formBuilder,\n      fileDownloadService,\n      dialogService,\n      organizationService,\n    );\n  }\n\n  protected get disabledByPolicy(): boolean {\n    return false;\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n    });\n\n    await super.ngOnInit();\n  }\n\n  getExportData() {\n    return this.exportService.getOrganizationExport(\n      this.organizationId,\n      this.format,\n      this.filePassword,\n    );\n  }\n\n  getFileName() {\n    return super.getFileName(\"org\");\n  }\n\n  async collectEvent(): Promise<void> {\n    await this.eventCollectionService.collect(\n      EventType.Organization_ClientExportedVault,\n      null,\n      null,\n      this.organizationId,\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../guards/org-permissions.guard\";\n\nimport { OrganizationVaultExportComponent } from \"./org-vault-export.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OrganizationVaultExportComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: {\n      titleId: \"exportVault\",\n      organizationPermissions: (org: Organization) => org.canAccessImportExport,\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class OrganizationVaultExportRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { ExportScopeCalloutComponent } from \"@bitwarden/vault-export-ui\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../../shared\";\n\nimport { OrganizationVaultExportRoutingModule } from \"./org-vault-export-routing.module\";\nimport { OrganizationVaultExportComponent } from \"./org-vault-export.component\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    OrganizationVaultExportRoutingModule,\n    ExportScopeCalloutComponent,\n  ],\n  declarations: [OrganizationVaultExportComponent],\n})\nexport class OrganizationVaultExportModule {}\n"],"names":["OrganizationVaultExportComponent","constructor","i18nService","platformUtilsService","exportService","eventCollectionService","route","policyService","logService","formBuilder","fileDownloadService","dialogService","organizationService","super","disabledByPolicy","ngOnInit","this","parent","params","subscribe","organizationId","getExportData","getOrganizationExport","format","filePassword","getFileName","collectEvent","collect","Organization_ClientExportedVault","routes","path","component","canActivate","data","titleId","organizationPermissions","org","canAccessImportExport","OrganizationVaultExportRoutingModule","forChild","OrganizationVaultExportModule"],"sourceRoot":""}