{"version":3,"file":"encrypt-worker.0d0845fabb9cc329f366.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/create fake namespace object","webpack://@bitwarden/web-vault/webpack/runtime/startup chunk dependencies","webpack://@bitwarden/web-vault/../../libs/common/src/platform/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/encryption-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/file-upload-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/hash-purpose.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/html-storage-location.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/kdf-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/domain/kdf-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/misc/range-with-default.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/key-suffix-options.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/log-level-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/storage-location.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/enums/theme-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/console-log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/container.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/web-crypto-function.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-reprompt-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/field-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/linked-id-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/secure-note-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/fido2-credential.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/linked-field-option.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/fido2-credential.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/misc/safe-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/fido2-credential.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/encrypt.worker.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/importScripts chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(44).then(next);\n};","/* eslint-disable no-useless-escape */\nimport * as path from \"path\";\n\nimport { Buffer as BufferLib } from \"buffer/\";\nimport { Observable, of, switchMap } from \"rxjs\";\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof self === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n  static readonly originalMinimumPasswordLength = 8;\n  static readonly minimumPasswordLength = 12;\n  static readonly DomainMatchBlacklist = new Map<string, Set<string>>([\n    [\"google.com\", new Set([\"script.google.com\"])],\n  ]);\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    return BufferLib.from(buffer).toString(\"utf8\");\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  /**\n   * Converts a hex string to an ArrayBuffer.\n   * Note: this doesn't need any Node specific code as parseInt() / ArrayBuffer / Uint8Array\n   * work the same in Node and the browser.\n   * @param {string} hexString - A string of hexadecimal characters.\n   * @returns {ArrayBuffer} The ArrayBuffer representation of the hex string.\n   */\n  static hexStringToArrayBuffer(hexString: string): ArrayBuffer {\n    // Check if the hexString has an even length, as each hex digit represents half a byte (4 bits),\n    // and it takes two hex digits to represent a full byte (8 bits).\n    if (hexString.length % 2 !== 0) {\n      throw \"HexString has to be an even length\";\n    }\n\n    // Create an ArrayBuffer with a length that is half the length of the hex string,\n    // because each pair of hex digits will become a single byte.\n    const arrayBuffer = new ArrayBuffer(hexString.length / 2);\n\n    // Create a Uint8Array view on top of the ArrayBuffer (each position represents a byte)\n    // as ArrayBuffers cannot be edited directly.\n    const uint8Array = new Uint8Array(arrayBuffer);\n\n    // Loop through the bytes\n    for (let i = 0; i < uint8Array.length; i++) {\n      // Extract two hex characters (1 byte)\n      const hexByte = hexString.substr(i * 2, 2);\n\n      // Convert hexByte into a decimal value from base 16. (ex: ff --> 255)\n      const byteValue = parseInt(hexByte, 16);\n\n      // Place the byte value into the uint8Array\n      uint8Array[i] = byteValue;\n    }\n\n    return arrayBuffer;\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n\n  static isGuid(id: string) {\n    return RegExp(Utils.guidRegex, \"i\").test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, {\n        validHosts: this.validHosts,\n        allowPrivateDomains: true,\n      });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1]),\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T],\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    return Utils.getUrlObject(uriString);\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source,\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  /**\n   * encodeURIComponent escapes all characters except the following:\n   * alphabetic, decimal digits, - _ . ! ~ * ' ( )\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#encoding_for_rfc3986\n   */\n  static encodeRFC3986URIComponent(str: string): string {\n    return encodeURIComponent(str).replace(\n      /[!'()*]/g,\n      (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`,\n    );\n  }\n\n  /**\n   * Normalizes a path for defense against attacks like traversals\n   * @param denormalizedPath\n   * @returns\n   */\n  static normalizePath(denormalizedPath: string): string {\n    return path.normalize(decodeURIComponent(denormalizedPath)).replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a,\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4),\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Generate an observable from a function that returns a promise.\n   * Similar to the rxjs function {@link from} with one big exception:\n   * {@link from} will not re-execute the function when observers resubscribe.\n   * {@link Util.asyncToObservable} will execute `generator` for every\n   * subscribe, making it ideal if the value ever needs to be refreshed.\n   * */\n  static asyncToObservable<T>(generator: () => Promise<T>): Observable<T> {\n    return of(undefined).pipe(switchMap(() => generator()));\n  }\n\n  /**\n   * Return the number of days remaining before a target date arrives.\n   * Returns 0 if the day has already passed.\n   */\n  static daysRemaining(targetDate: Date): number {\n    const diffTime = targetDate.getTime() - Date.now();\n    const msPerDay = 86400000;\n    return Math.max(0, Math.floor(diffTime / msPerDay));\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    // All the methods below require a protocol to properly parse a URL string\n    // Assume http if no other protocol is present\n    const hasProtocol = uriString.indexOf(\"://\") > -1;\n    if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n      uriString = \"http://\" + uriString;\n    } else if (!hasProtocol) {\n      return null;\n    }\n\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      }\n\n      return new URL(uriString);\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n\n/** The expected number of parts to a serialized EncString of the given encryption type.\n * For example, an EncString of type AesCbc256_B64 will have 2 parts, and an EncString of type\n * AesCbc128_HmacSha256_B64 will have 3 parts.\n *\n * Example of annotated serialized EncStrings:\n * 0.iv|data\n * 1.iv|data|mac\n * 2.iv|data|mac\n * 3.data\n * 4.data\n *\n * @see EncString\n * @see EncryptionType\n * @see EncString.parseEncryptedString\n */\nexport const EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE = {\n  [EncryptionType.AesCbc256_B64]: 2,\n  [EncryptionType.AesCbc128_HmacSha256_B64]: 3,\n  [EncryptionType.AesCbc256_HmacSha256_B64]: 3,\n  [EncryptionType.Rsa2048_OaepSha256_B64]: 1,\n  [EncryptionType.Rsa2048_OaepSha1_B64]: 1,\n  [EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64]: 2,\n  [EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64]: 2,\n};\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { PBKDF2KdfConfig } from \"../../auth/models/domain/kdf-config\";\nimport { RangeWithDefault } from \"../misc/range-with-default\";\n\nexport enum KdfType {\n  PBKDF2_SHA256 = 0,\n  Argon2id = 1,\n}\n\nexport const ARGON2_MEMORY = new RangeWithDefault(16, 1024, 64);\nexport const ARGON2_PARALLELISM = new RangeWithDefault(1, 16, 4);\nexport const ARGON2_ITERATIONS = new RangeWithDefault(2, 10, 3);\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const PBKDF2_ITERATIONS = new RangeWithDefault(600_000, 2_000_000, 600_000);\nexport const DEFAULT_KDF_CONFIG = new PBKDF2KdfConfig(PBKDF2_ITERATIONS.defaultValue);\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ARGON2_ITERATIONS,\n  ARGON2_MEMORY,\n  ARGON2_PARALLELISM,\n  KdfType,\n  PBKDF2_ITERATIONS,\n} from \"../../../platform/enums/kdf-type.enum\";\n\n/**\n * Represents a type safe KDF configuration.\n */\nexport type KdfConfig = PBKDF2KdfConfig | Argon2KdfConfig;\n\n/**\n * Password-Based Key Derivation Function 2 (PBKDF2) KDF configuration.\n */\nexport class PBKDF2KdfConfig {\n  kdfType: KdfType.PBKDF2_SHA256 = KdfType.PBKDF2_SHA256;\n  iterations: number;\n\n  constructor(iterations?: number) {\n    this.iterations = iterations ?? PBKDF2_ITERATIONS.defaultValue;\n  }\n\n  /**\n   * Validates the PBKDF2 KDF configuration.\n   * A Valid PBKDF2 KDF configuration has KDF iterations between the 600_000 and 2_000_000.\n   */\n  validateKdfConfig(): void {\n    if (!PBKDF2_ITERATIONS.inRange(this.iterations)) {\n      throw new Error(\n        `PBKDF2 iterations must be between ${PBKDF2_ITERATIONS.min} and ${PBKDF2_ITERATIONS.max}`,\n      );\n    }\n  }\n\n  static fromJSON(json: Jsonify<PBKDF2KdfConfig>): PBKDF2KdfConfig {\n    return new PBKDF2KdfConfig(json.iterations);\n  }\n}\n\n/**\n * Argon2 KDF configuration.\n */\nexport class Argon2KdfConfig {\n  kdfType: KdfType.Argon2id = KdfType.Argon2id;\n  iterations: number;\n  memory: number;\n  parallelism: number;\n\n  constructor(iterations?: number, memory?: number, parallelism?: number) {\n    this.iterations = iterations ?? ARGON2_ITERATIONS.defaultValue;\n    this.memory = memory ?? ARGON2_MEMORY.defaultValue;\n    this.parallelism = parallelism ?? ARGON2_PARALLELISM.defaultValue;\n  }\n\n  /**\n   * Validates the Argon2 KDF configuration.\n   * A Valid Argon2 KDF configuration has iterations between 2 and 10, memory between 16mb and 1024mb, and parallelism between 1 and 16.\n   */\n  validateKdfConfig(): void {\n    if (!ARGON2_ITERATIONS.inRange(this.iterations)) {\n      throw new Error(\n        `Argon2 iterations must be between ${ARGON2_ITERATIONS.min} and ${ARGON2_ITERATIONS.max}`,\n      );\n    }\n\n    if (!ARGON2_MEMORY.inRange(this.memory)) {\n      throw new Error(\n        `Argon2 memory must be between ${ARGON2_MEMORY.min}mb and ${ARGON2_MEMORY.max}mb`,\n      );\n    }\n\n    if (!ARGON2_PARALLELISM.inRange(this.parallelism)) {\n      throw new Error(\n        `Argon2 parallelism must be between ${ARGON2_PARALLELISM.min} and ${ARGON2_PARALLELISM.max}.`,\n      );\n    }\n  }\n\n  static fromJSON(json: Jsonify<Argon2KdfConfig>): Argon2KdfConfig {\n    return new Argon2KdfConfig(json.iterations, json.memory, json.parallelism);\n  }\n}\n","/**\n * A range with a default value.\n *\n * Enforces constraints to ensure min > default > max.\n */\nexport class RangeWithDefault {\n  constructor(\n    readonly min: number,\n    readonly max: number,\n    readonly defaultValue: number,\n  ) {\n    if (min > max) {\n      throw new Error(`${min} is greater than ${max}.`);\n    }\n\n    if (this.inRange(defaultValue) === false) {\n      throw new Error(\"Default value is not in range.\");\n    }\n  }\n\n  inRange(value: number): boolean {\n    return value >= this.min && value <= this.max;\n  }\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n  Pin = \"pin\",\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { EncryptionType } from \"../../enums\";\n\nexport class SymmetricCryptoKey {\n  key: Uint8Array;\n  encKey?: Uint8Array;\n  macKey?: Uint8Array;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: Uint8Array, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromString(s: string): SymmetricCryptoKey {\n    if (s == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(s);\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    return SymmetricCryptoKey.fromString(obj?.keyB64);\n  }\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/log-level-type.enum\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null,\n  ) {}\n\n  debug(message?: any, ...optionalParams: any[]) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message, ...optionalParams);\n  }\n\n  info(message?: any, ...optionalParams: any[]) {\n    this.write(LogLevelType.Info, message, ...optionalParams);\n  }\n\n  warning(message?: any, ...optionalParams: any[]) {\n    this.write(LogLevelType.Warning, message, ...optionalParams);\n  }\n\n  error(message?: any, ...optionalParams: any[]) {\n    this.write(LogLevelType.Error, message, ...optionalParams);\n  }\n\n  write(level: LogLevelType, message?: any, ...optionalParams: any[]) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message, ...optionalParams);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message, ...optionalParams);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message, ...optionalParams);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message, ...optionalParams);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(\n    private cryptoService: CryptoService,\n    private encryptService: EncryptService,\n  ) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as argon2 from \"argon2-browser\";\nimport * as forge from \"node-forge\";\n\nimport { Utils } from \"../../platform/misc/utils\";\nimport { CsprngArray } from \"../../types/csprng\";\nimport { CryptoFunctionService } from \"../abstractions/crypto-function.service\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private wasmSupported: boolean;\n\n  constructor(globalContext: Window | typeof global) {\n    this.crypto = typeof globalContext.crypto !== \"undefined\" ? globalContext.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof this.crypto.subtle !== \"undefined\" ? this.crypto.subtle : null;\n    this.wasmSupported = this.checkIfWasmSupported();\n  }\n\n  async pbkdf2(\n    password: string | Uint8Array,\n    salt: string | Uint8Array,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number,\n  ): Promise<Uint8Array> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"],\n    );\n    const buffer = await this.subtle.deriveBits(pbkdf2Params as any, impKey, wcLen);\n    return new Uint8Array(buffer);\n  }\n\n  async argon2(\n    password: string | Uint8Array,\n    salt: string | Uint8Array,\n    iterations: number,\n    memory: number,\n    parallelism: number,\n  ): Promise<Uint8Array> {\n    if (!this.wasmSupported) {\n      throw \"Webassembly support is required for the Argon2 KDF feature.\";\n    }\n\n    const passwordArr = new Uint8Array(this.toBuf(password));\n    const saltArr = new Uint8Array(this.toBuf(salt));\n\n    const result = await argon2.hash({\n      pass: passwordArr,\n      salt: saltArr,\n      time: iterations,\n      mem: memory,\n      parallelism: parallelism,\n      hashLen: 32,\n      type: argon2.ArgonType.Argon2id,\n    });\n    argon2.unloadRuntime();\n    return result.hash;\n  }\n\n  async hkdf(\n    ikm: Uint8Array,\n    salt: string | Uint8Array,\n    info: string | Uint8Array,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\",\n  ): Promise<Uint8Array> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    const buffer = await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n    return new Uint8Array(buffer);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: Uint8Array,\n    info: string | Uint8Array,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\",\n  ): Promise<Uint8Array> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize);\n  }\n\n  async hash(\n    value: string | Uint8Array,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\",\n  ): Promise<Uint8Array> {\n    if (algorithm === \"md5\") {\n      const md = forge.md.md5.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data);\n    }\n\n    const valueBuf = this.toBuf(value);\n    const buffer = await this.subtle.digest(\n      { name: this.toWebCryptoAlgorithm(algorithm) },\n      valueBuf,\n    );\n    return new Uint8Array(buffer);\n  }\n\n  async hmac(\n    value: Uint8Array,\n    key: Uint8Array,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\",\n  ): Promise<Uint8Array> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    const buffer = await this.subtle.sign(signingAlgorithm, impKey, value);\n    return new Uint8Array(buffer);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: Uint8Array, b: Uint8Array): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: Uint8Array, iv: Uint8Array, key: Uint8Array): Promise<Uint8Array> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    const buffer = await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey,\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>, mode: \"cbc\" | \"ecb\"): Promise<string> {\n    const decipher = (forge as any).cipher.createDecipher(\n      this.toWebCryptoAesMode(mode),\n      parameters.encKey,\n    );\n    const options = {} as any;\n    if (mode === \"cbc\") {\n      options.iv = parameters.iv;\n    }\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    decipher.start(options);\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(\n    data: Uint8Array,\n    iv: Uint8Array,\n    key: Uint8Array,\n    mode: \"cbc\" | \"ecb\",\n  ): Promise<Uint8Array> {\n    if (mode === \"ecb\") {\n      // Web crypto does not support AES-ECB mode, so we need to do this in forge.\n      const params = new DecryptParameters<string>();\n      params.data = this.toByteString(data);\n      params.encKey = this.toByteString(key);\n      const result = await this.aesDecryptFast(params, \"ecb\");\n      return Utils.fromByteStringToArray(result);\n    }\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    const buffer = await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  async rsaEncrypt(\n    data: Uint8Array,\n    publicKey: Uint8Array,\n    algorithm: \"sha1\" | \"sha256\",\n  ): Promise<Uint8Array> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    const buffer = await this.subtle.encrypt(rsaParams, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  async rsaDecrypt(\n    data: Uint8Array,\n    privateKey: Uint8Array,\n    algorithm: \"sha1\" | \"sha256\",\n  ): Promise<Uint8Array> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    const buffer = await this.subtle.decrypt(rsaParams, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  async rsaExtractPublicKey(privateKey: Uint8Array): Promise<Uint8Array> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    const buffer = await this.subtle.exportKey(\"spki\", impPublicKey);\n    return new Uint8Array(buffer);\n  }\n\n  async aesGenerateKey(bitLength = 128 | 192 | 256 | 512): Promise<CsprngArray> {\n    if (bitLength === 512) {\n      // 512 bit keys are not supported in WebCrypto, so we concat two 256 bit keys\n      const key1 = await this.aesGenerateKey(256);\n      const key2 = await this.aesGenerateKey(256);\n      return new Uint8Array([...key1, ...key2]) as CsprngArray;\n    }\n    const aesParams = {\n      name: \"AES-CBC\",\n      length: bitLength,\n    };\n\n    const key = await this.subtle.generateKey(aesParams, true, [\"encrypt\", \"decrypt\"]);\n    const rawKey = await this.subtle.exportKey(\"raw\", key);\n    return new Uint8Array(rawKey) as CsprngArray;\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[Uint8Array, Uint8Array]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = await this.subtle.generateKey(rsaParams, true, [\"encrypt\", \"decrypt\"]);\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [new Uint8Array(publicKey), new Uint8Array(privateKey)];\n  }\n\n  randomBytes(length: number): Promise<CsprngArray> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr as CsprngArray);\n  }\n\n  private toBuf(value: string | Uint8Array): Uint8Array {\n    let buf: Uint8Array;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value);\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | Uint8Array): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n\n  private toWebCryptoAesMode(mode: \"cbc\" | \"ecb\"): string {\n    return mode === \"cbc\" ? \"AES-CBC\" : \"AES-ECB\";\n  }\n\n  // ref: https://stackoverflow.com/a/47880734/1090359\n  private checkIfWasmSupported(): boolean {\n    try {\n      if (typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\") {\n        const module = new WebAssembly.Module(\n          Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00),\n        );\n        if (module instanceof WebAssembly.Module) {\n          return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n      }\n    } catch {\n      return false;\n    }\n    return false;\n  }\n}\n","import { Utils } from \"../../../platform/misc/utils\";\nimport { EncryptionType } from \"../../enums\";\nimport { Encrypted } from \"../../interfaces/encrypted\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements Encrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: Uint8Array = null;\n  readonly ivBytes: Uint8Array = null;\n  readonly macBytes: Uint8Array = null;\n\n  constructor(readonly buffer: Uint8Array) {\n    const encBytes = buffer;\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH);\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH,\n        );\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH);\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH);\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH);\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\",\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(new Uint8Array(buffer));\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64);\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify, Opaque } from \"type-fest\";\n\nimport { EncryptionType, EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE } from \"../../enums\";\nimport { Encrypted } from \"../../interfaces/encrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements Encrypted {\n  encryptedString?: EncryptedString;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string,\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): Uint8Array {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv);\n  }\n\n  get macBytes(): Uint8Array {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac);\n  }\n\n  get dataBytes(): Uint8Array {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data);\n  }\n\n  toJSON() {\n    return this.encryptedString as string;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = (encType + \".\" + iv + \"|\" + data) as EncryptedString;\n    } else {\n      this.encryptedString = (encType + \".\" + data) as EncryptedString;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString = (this.encryptedString + \"|\" + mac) as EncryptedString;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as EncryptedString;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = EncString.parseEncryptedString(this.encryptedString);\n\n    this.encryptionType = encType;\n\n    if (encPieces.length !== EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE[encType]) {\n      return;\n    }\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        this.data = encPieces[0];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        this.data = encPieces[0];\n        this.mac = encPieces[1];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return { encType: NaN, encPieces: [] };\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  static isSerializedEncString(s: string): boolean {\n    if (s == null) {\n      return false;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(s);\n\n    if (isNaN(encType) || encPieces.length === 0) {\n      return false;\n    }\n\n    return EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE[encType] === encPieces.length;\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getUserKeyWithLegacySupport();\n  }\n}\n\nexport type EncryptedString = Opaque<string, \"EncString\">;\n","import { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: Uint8Array;\n  data: Uint8Array;\n  mac: Uint8Array;\n  key: SymmetricCryptoKey;\n}\n","import { Utils } from \"../../../platform/misc/utils\";\nimport { CryptoFunctionService } from \"../../abstractions/crypto-function.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { Encrypted } from \"../../interfaces/encrypted\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean,\n  ) {}\n\n  async encrypt(plainValue: string | Uint8Array, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: Uint8Array;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue);\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: Uint8Array, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key,\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\",\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams, \"cbc\");\n  }\n\n  async decryptToBytes(encThing: Encrypted, key: SymmetricCryptoKey): Promise<Uint8Array> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(macData, key.macKey, \"sha256\");\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey,\n      \"cbc\",\n    );\n\n    return result ?? null;\n  }\n\n  async rsaEncrypt(data: Uint8Array, publicKey: Uint8Array): Promise<EncString> {\n    if (data == null) {\n      throw new Error(\"No data provided for encryption.\");\n    }\n\n    if (publicKey == null) {\n      throw new Error(\"No public key provided for encryption.\");\n    }\n    const encrypted = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encrypted));\n  }\n\n  async rsaDecrypt(data: EncString, privateKey: Uint8Array): Promise<Uint8Array> {\n    if (data == null) {\n      throw new Error(\"No data provided for decryption.\");\n    }\n\n    let algorithm: \"sha1\" | \"sha256\";\n    switch (data.encryptionType) {\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        algorithm = \"sha1\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        algorithm = \"sha256\";\n        break;\n      default:\n        throw new Error(\"Invalid encryption type.\");\n    }\n\n    if (privateKey == null) {\n      throw new Error(\"No private key provided for decryption.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data.dataBytes, privateKey, algorithm);\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey,\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    // don't use promise.all because this task is not io bound\n    const results = [];\n    for (let i = 0; i < items.length; i++) {\n      results.push(await items[i].decrypt(key));\n    }\n    return results;\n  }\n\n  async hash(value: string | Uint8Array, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hashArray = await this.cryptoFunctionService.hash(value, algorithm);\n    return Utils.fromBufferToB64(hashArray);\n  }\n\n  private async aesEncrypt(data: Uint8Array, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: Encrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","import { View } from \"../../../models/view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\n// https://contributing.bitwarden.com/architecture/clients/data-model#domain\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = [],\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = [],\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null,\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType, LinkedIdType } from \"../../enums\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { Fido2CredentialApi } from \"../api/fido2-credential.api\";\n\nexport class Fido2CredentialData {\n  credentialId: string;\n  keyType: \"public-key\";\n  keyAlgorithm: \"ECDSA\";\n  keyCurve: \"P-256\";\n  keyValue: string;\n  rpId: string;\n  userHandle: string;\n  userName: string;\n  counter: string;\n  rpName: string;\n  userDisplayName: string;\n  discoverable: string;\n  creationDate: string;\n\n  constructor(data?: Fido2CredentialApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.credentialId = data.credentialId;\n    this.keyType = data.keyType;\n    this.keyAlgorithm = data.keyAlgorithm;\n    this.keyCurve = data.keyCurve;\n    this.keyValue = data.keyValue;\n    this.rpId = data.rpId;\n    this.userHandle = data.userHandle;\n    this.userName = data.userName;\n    this.counter = data.counter;\n    this.rpName = data.rpName;\n    this.userDisplayName = data.userDisplayName;\n    this.discoverable = data.discoverable;\n    this.creationDate = data.creationDate;\n  }\n}\n","import { UriMatchStrategySetting } from \"../../../models/domain/domain-service\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  uriChecksum: string;\n  match: UriMatchStrategySetting = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.uriChecksum = data.uriChecksum;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { Fido2CredentialData } from \"./fido2-credential.data\";\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n  fido2Credentials?: Fido2CredentialData[];\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n\n    if (data.fido2Credentials) {\n      this.fido2Credentials = data.fido2Credentials?.map((key) => new Fido2CredentialData(key));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n  key: string;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n    this.key = response.key;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n\n  static fromJSON(obj: Jsonify<CipherData>) {\n    return Object.assign(new CipherData(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { Attachment } from \"../domain/attachment\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { LinkedIdType } from \"./enums\";\nimport { ItemView } from \"./models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(\n    readonly propertyKey: string,\n    private readonly _i18nKey?: string,\n  ) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { View } from \"../../../models/view/view\";\nimport { LinkedMetadata } from \"../../linked-field-option.decorator\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums\";\nimport { linkedFieldOption } from \"../../linked-field-option.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n\n  // ref https://stackoverflow.com/a/5911300\n  static getCardBrandByPatterns(cardNum: string): string {\n    if (cardNum == null || typeof cardNum !== \"string\" || cardNum.trim() === \"\") {\n      return null;\n    }\n\n    // Visa\n    let re = new RegExp(\"^4\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    // Mastercard\n    // Updated for Mastercard 2017 BINs expansion\n    if (\n      /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(\n        cardNum,\n      )\n    ) {\n      return \"Mastercard\";\n    }\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (cardNum.match(re) != null) {\n      return \"Amex\";\n    }\n\n    // Discover\n    re = new RegExp(\n      \"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\",\n    );\n    if (cardNum.match(re) != null) {\n      return \"Discover\";\n    }\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (cardNum.match(re) != null) {\n      return \"JCB\";\n    }\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    return null;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { FieldType, LinkedIdType } from \"../../enums\";\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { IdentityLinkedId as LinkedId } from \"../../enums\";\nimport { linkedFieldOption } from \"../../linked-field-option.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class Fido2CredentialView extends ItemView {\n  credentialId: string;\n  keyType: \"public-key\";\n  keyAlgorithm: \"ECDSA\";\n  keyCurve: \"P-256\";\n  keyValue: string;\n  rpId: string;\n  userHandle: string;\n  userName: string;\n  counter: number;\n  rpName: string;\n  userDisplayName: string;\n  discoverable: boolean;\n  creationDate: Date = null;\n\n  get subTitle(): string {\n    return this.userDisplayName;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Fido2CredentialView>>): Fido2CredentialView {\n    const creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    return Object.assign(new Fido2CredentialView(), obj, {\n      creationDate,\n    });\n  }\n}\n","/*\n  See full documentation at:\n    https://bitwarden.com/help/uri-match-detection/#match-detection-options\n\n  Domain: \"the top-level domain and second-level domain of the URI match the detected resource\",\n  Host: \"the hostname and (if specified) port of the URI matches the detected resource\",\n  StartsWith: \"the detected resource starts with the URI, regardless of what follows it\",\n  Exact: \"the URI matches the detected resource exactly\",\n  RegularExpression: \"the detected resource matches a specified regular expression\",\n  Never: \"never offer auto-fill for the item\",\n*/\nexport const UriMatchStrategy = {\n  Domain: 0,\n  Host: 1,\n  StartsWith: 2,\n  Exact: 3,\n  RegularExpression: 4,\n  Never: 5,\n} as const;\n\nexport type UriMatchStrategySetting = (typeof UriMatchStrategy)[keyof typeof UriMatchStrategy];\n\nexport type NeverDomains = { [id: string]: unknown };\nexport type EquivalentDomains = string[][];\n","import { Utils } from \"./utils\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class SafeUrls {\n  static canLaunch(uri: string): boolean {\n    if (Utils.isNullOrWhitespace(uri)) {\n      return false;\n    }\n\n    for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n      if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchStrategy, UriMatchStrategySetting } from \"../../../models/domain/domain-service\";\nimport { View } from \"../../../models/view/view\";\nimport { SafeUrls } from \"../../../platform/misc/safe-urls\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nexport class LoginUriView implements View {\n  match: UriMatchStrategySetting = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchStrategy.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchStrategy.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchStrategy.RegularExpression) {\n      this._canLaunch = SafeUrls.canLaunch(this.launchUri);\n    } else {\n      this._canLaunch = false;\n    }\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n\n  matchesUri(\n    targetUri: string,\n    equivalentDomains: Set<string>,\n    defaultUriMatch: UriMatchStrategySetting = null,\n  ): boolean {\n    if (!this.uri || !targetUri) {\n      return false;\n    }\n\n    let matchType = this.match ?? defaultUriMatch;\n    matchType ??= UriMatchStrategy.Domain;\n\n    const targetDomain = Utils.getDomain(targetUri);\n    const matchDomains = equivalentDomains.add(targetDomain);\n\n    switch (matchType) {\n      case UriMatchStrategy.Domain:\n        return this.matchesDomain(targetUri, matchDomains);\n      case UriMatchStrategy.Host: {\n        const urlHost = Utils.getHost(targetUri);\n        return urlHost != null && urlHost === Utils.getHost(this.uri);\n      }\n      case UriMatchStrategy.Exact:\n        return targetUri === this.uri;\n      case UriMatchStrategy.StartsWith:\n        return targetUri.startsWith(this.uri);\n      case UriMatchStrategy.RegularExpression:\n        try {\n          const regex = new RegExp(this.uri, \"i\");\n          return regex.test(targetUri);\n        } catch (e) {\n          // Invalid regex\n          return false;\n        }\n      case UriMatchStrategy.Never:\n        return false;\n      default:\n        break;\n    }\n\n    return false;\n  }\n\n  private matchesDomain(targetUri: string, matchDomains: Set<string>) {\n    if (targetUri == null || this.domain == null || !matchDomains.has(this.domain)) {\n      return false;\n    }\n\n    if (Utils.DomainMatchBlacklist.has(this.domain)) {\n      const domainUrlHost = Utils.getHost(targetUri);\n      return !Utils.DomainMatchBlacklist.get(this.domain).has(domainUrlHost);\n    }\n\n    return true;\n  }\n}\n","import { UriMatchStrategySetting } from \"../../../models/domain/domain-service\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { DeepJsonify } from \"../../../types/deep-jsonify\";\nimport { LoginLinkedId as LinkedId } from \"../../enums\";\nimport { linkedFieldOption } from \"../../linked-field-option.decorator\";\nimport { Login } from \"../domain/login\";\n\nimport { Fido2CredentialView } from \"./fido2-credential.view\";\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = [];\n  autofillOnPageLoad: boolean = null;\n  fido2Credentials: Fido2CredentialView[] = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  get hasFido2Credentials(): boolean {\n    return this.fido2Credentials != null && this.fido2Credentials.length > 0;\n  }\n\n  matchesUri(\n    targetUri: string,\n    equivalentDomains: Set<string>,\n    defaultUriMatch: UriMatchStrategySetting = null,\n  ): boolean {\n    if (this.uris == null) {\n      return false;\n    }\n\n    return this.uris.some((uri) => uri.matchesUri(targetUri, equivalentDomains, defaultUriMatch));\n  }\n\n  static fromJSON(obj: Partial<DeepJsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris.map((uri) => LoginUriView.fromJSON(uri));\n    const fido2Credentials = obj.fido2Credentials?.map((key) => Fido2CredentialView.fromJSON(key));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate,\n      uris,\n      fido2Credentials,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { View } from \"../../../models/view/view\";\nimport { InitializerMetadata } from \"../../../platform/interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../../platform/services/cryptography/initializer-key\";\nimport { DeepJsonify } from \"../../../types/deep-jsonify\";\nimport { LinkedIdType } from \"../../enums\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item?.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item?.linkedFieldOptions;\n  }\n\n  get isUnassigned(): boolean {\n    return (\n      this.organizationId != null && (this.collectionIds == null || this.collectionIds.length === 0)\n    );\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  // This is used as a marker to indicate that the cipher view object still has its prototype\n  toJSON() {\n    return this;\n  }\n\n  static fromJSON(obj: Partial<DeepJsonify<CipherView>>): CipherView {\n    if (obj == null) {\n      return null;\n    }\n\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../../platform/misc/utils\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"],\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey,\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getUserKeyWithLegacySupport();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"],\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      [],\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey,\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { FieldType, LinkedIdType } from \"../../enums\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      [],\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey,\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"],\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      [],\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey,\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { Fido2CredentialData } from \"../data/fido2-credential.data\";\nimport { Fido2CredentialView } from \"../view/fido2-credential.view\";\n\nexport class Fido2Credential extends Domain {\n  credentialId: EncString | null = null;\n  keyType: EncString;\n  keyAlgorithm: EncString;\n  keyCurve: EncString;\n  keyValue: EncString;\n  rpId: EncString;\n  userHandle: EncString;\n  userName: EncString;\n  counter: EncString;\n  rpName: EncString;\n  userDisplayName: EncString;\n  discoverable: EncString;\n  creationDate: Date;\n\n  constructor(obj?: Fido2CredentialData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        credentialId: null,\n        keyType: null,\n        keyAlgorithm: null,\n        keyCurve: null,\n        keyValue: null,\n        rpId: null,\n        userHandle: null,\n        userName: null,\n        counter: null,\n        rpName: null,\n        userDisplayName: null,\n        discoverable: null,\n      },\n      [],\n    );\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<Fido2CredentialView> {\n    const view = await this.decryptObj(\n      new Fido2CredentialView(),\n      {\n        credentialId: null,\n        keyType: null,\n        keyAlgorithm: null,\n        keyCurve: null,\n        keyValue: null,\n        rpId: null,\n        userHandle: null,\n        userName: null,\n        rpName: null,\n        userDisplayName: null,\n        discoverable: null,\n      },\n      orgId,\n      encKey,\n    );\n\n    const { counter } = await this.decryptObj(\n      { counter: \"\" },\n      {\n        counter: null,\n      },\n      orgId,\n      encKey,\n    );\n    // Counter will end up as NaN if this fails\n    view.counter = parseInt(counter);\n\n    const { discoverable } = await this.decryptObj(\n      { discoverable: \"\" },\n      {\n        discoverable: null,\n      },\n      orgId,\n      encKey,\n    );\n    view.discoverable = discoverable === \"true\";\n    view.creationDate = this.creationDate;\n\n    return view;\n  }\n\n  toFido2CredentialData(): Fido2CredentialData {\n    const i = new Fido2CredentialData();\n    i.creationDate = this.creationDate.toISOString();\n    this.buildDataModel(this, i, {\n      credentialId: null,\n      keyType: null,\n      keyAlgorithm: null,\n      keyCurve: null,\n      keyValue: null,\n      rpId: null,\n      userHandle: null,\n      userName: null,\n      counter: null,\n      rpName: null,\n      userDisplayName: null,\n      discoverable: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Fido2Credential>): Fido2Credential {\n    if (obj == null) {\n      return null;\n    }\n\n    const credentialId = EncString.fromJSON(obj.credentialId);\n    const keyType = EncString.fromJSON(obj.keyType);\n    const keyAlgorithm = EncString.fromJSON(obj.keyAlgorithm);\n    const keyCurve = EncString.fromJSON(obj.keyCurve);\n    const keyValue = EncString.fromJSON(obj.keyValue);\n    const rpId = EncString.fromJSON(obj.rpId);\n    const userHandle = EncString.fromJSON(obj.userHandle);\n    const userName = EncString.fromJSON(obj.userName);\n    const counter = EncString.fromJSON(obj.counter);\n    const rpName = EncString.fromJSON(obj.rpName);\n    const userDisplayName = EncString.fromJSON(obj.userDisplayName);\n    const discoverable = EncString.fromJSON(obj.discoverable);\n    const creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n\n    return Object.assign(new Fido2Credential(), obj, {\n      credentialId,\n      keyType,\n      keyAlgorithm,\n      keyCurve,\n      keyValue,\n      rpId,\n      userHandle,\n      userName,\n      counter,\n      rpName,\n      userDisplayName,\n      discoverable,\n      creationDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchStrategySetting } from \"../../../models/domain/domain-service\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  uriChecksum: EncString | undefined;\n  match: UriMatchStrategySetting;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n        uriChecksum: null,\n      },\n      [],\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey,\n    );\n  }\n\n  async validateChecksum(clearTextUri: string, orgId: string, encKey: SymmetricCryptoKey) {\n    if (this.uriChecksum == null) {\n      return false;\n    }\n\n    const cryptoService = Utils.getContainerService().getEncryptService();\n    const localChecksum = await cryptoService.hash(clearTextUri, \"sha256\");\n\n    const remoteChecksum = await this.uriChecksum.decrypt(orgId, encKey);\n    return remoteChecksum === localChecksum;\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        uriChecksum: null,\n        match: null,\n      },\n      [\"match\"],\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    const uriChecksum = EncString.fromJSON(obj.uriChecksum);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n      uriChecksum,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { Fido2Credential } from \"./fido2-credential\";\nimport { LoginUri } from \"./login-uri\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n  fido2Credentials: Fido2Credential[];\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      [],\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n\n    if (obj.fido2Credentials) {\n      this.fido2Credentials = obj.fido2Credentials.map((key) => new Fido2Credential(key));\n    }\n  }\n\n  async decrypt(\n    orgId: string,\n    bypassValidation: boolean,\n    encKey?: SymmetricCryptoKey,\n  ): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey,\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        // URIs are shared remotely after decryption\n        // we need to validate that the string hasn't been changed by a compromised server\n        // This validation is tied to the existence of cypher.key for backwards compatibility\n        // So we bypass the validation if there's no cipher.key or procceed with the validation and\n        // Skip the value if it's been tampered with.\n        if (bypassValidation || (await this.uris[i].validateChecksum(uri.uri, orgId, encKey))) {\n          view.uris.push(uri);\n        }\n      }\n    }\n\n    if (this.fido2Credentials != null) {\n      view.fido2Credentials = await Promise.all(\n        this.fido2Credentials.map((key) => key.decrypt(orgId, encKey)),\n      );\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    if (this.fido2Credentials != null && this.fido2Credentials.length > 0) {\n      l.fido2Credentials = this.fido2Credentials.map((key) => key.toFido2CredentialData());\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n    const fido2Credentials =\n      obj.fido2Credentials?.map((key) => Fido2Credential.fromJSON(key)) ?? [];\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate,\n      uris,\n      fido2Credentials,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey,\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { SecureNoteType } from \"../../enums\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../../platform/interfaces/decryptable.interface\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { InitializerKey } from \"../../../platform/services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n  key: EncString;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"],\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  // We are passing the organizationId into the EncString.decrypt() method here, but because the encKey will always be\n  // present and so the organizationId will not be used.\n  // We will refactor the EncString.decrypt() in https://bitwarden.atlassian.net/browse/PM-3762 to remove the dependency on the organizationId.\n  async decrypt(encKey: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n    let bypassValidation = true;\n\n    if (this.key != null) {\n      const encryptService = Utils.getContainerService().getEncryptService();\n      encKey = new SymmetricCryptoKey(await encryptService.decryptToBytes(this.key, encKey));\n      bypassValidation = false;\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey,\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, bypassValidation, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(this.organizationId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(this.organizationId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(this.organizationId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n    c.key = this.key?.encryptedString;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n    const key = EncString.fromJSON(obj.key);\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n      key,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Cipher } from \"../../../vault/models/domain/cipher\";\nimport { CipherView } from \"../../../vault/models/view/cipher.view\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey,\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { ConsoleLogService } from \"../console-log.service\";\nimport { ContainerService } from \"../container.service\";\nimport { WebCryptoFunctionService } from \"../web-crypto-function.service\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\nconst workerApi: Worker = self as any;\n\nlet inited = false;\nlet encryptService: EncryptServiceImplementation;\n\n/**\n * Bootstrap the worker environment with services required for decryption\n */\nexport function init() {\n  const cryptoFunctionService = new WebCryptoFunctionService(self);\n  const logService = new ConsoleLogService(false);\n  encryptService = new EncryptServiceImplementation(cryptoFunctionService, logService, true);\n\n  const bitwardenContainerService = new ContainerService(null, encryptService);\n  bitwardenContainerService.attachToGlobal(self);\n\n  inited = true;\n}\n\n/**\n * Listen for messages and decrypt their contents\n */\nworkerApi.addEventListener(\"message\", async (event: { data: string }) => {\n  if (!inited) {\n    init();\n  }\n\n  const request: {\n    id: string;\n    items: Jsonify<Decryptable<any>>[];\n    key: Jsonify<SymmetricCryptoKey>;\n  } = JSON.parse(event.data);\n\n  const key = SymmetricCryptoKey.fromJSON(request.key);\n  const items = request.items.map((jsonItem) => {\n    const initializer = getClassInitializer<Decryptable<any>>(jsonItem.initializerKey);\n    return initializer(jsonItem);\n  });\n  const result = await encryptService.decryptItems(items, key);\n\n  workerApi.postMessage({\n    id: request.id,\n    items: JSON.stringify(result),\n  });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [44], function() { return __webpack_require__(36843); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + \"b3b5a3a8f7626e22cead\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t768: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// module cache are used so entry inlining is disabled\n// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","nodeURL","self","Utils","init","inited","isNode","process","release","name","isBrowser","window","isMobileBrowser","this","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","fromB64ToArray","str","Uint8Array","Buffer","from","binaryString","atob","bytes","length","i","charCodeAt","fromUrlB64ToArray","fromUrlB64ToB64","fromHexToArray","parseInt","substr","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromB64toUrlB64","b64Str","replace","fromBufferToUtf8","fromBufferToByteString","apply","fromBufferToHex","Array","prototype","map","call","x","slice","join","hexStringToArrayBuffer","hexString","arrayBuffer","ArrayBuffer","uint8Array","hexByte","byteValue","urlB64Str","output","Error","fromUrlB64ToUtf8","fromB64ToUtf8","fromUtf8ToB64","utfStr","decodeURIComponent","escape","fromUtf8ToUrlB64","newGuid","c","r","Math","random","isGuid","id","RegExp","guidRegex","test","getHostname","uriString","isNullOrWhitespace","trim","startsWith","indexOf","hostname","validHosts","getHost","url","getUrl","host","getDomain","parseResult","allowPrivateDomains","isIp","domain","getQueryParams","search","Map","split","forEach","pair","parts","set","toLowerCase","getSortFunction","i18nService","prop","a","b","collator","compare","localeCompare","isNullOrEmpty","isPromise","obj","undefined","nameOf","assign","target","source","Object","iterateEnum","keys","filter","k","Number","isNaN","getUrlObject","camelToPascalCase","s","charAt","toUpperCase","pickTextColorBasedOnBgColor","bgColor","threshold","svgTextFill","bgColorHexNums","substring","stringToColor","hash","color","getContainerService","bitwardenContainerService","validateHexColor","mapToRecord","fromEntries","recordToMap","record","entries","e","merge","destination","encodeRFC3986URIComponent","normalizePath","denormalizedPath","win","mobile","navigator","userAgent","vendor","opera","match","delay","ms","Promise","resolve","setTimeout","asyncToObservable","generator","of","pipe","switchMap","daysRemaining","targetDate","diffTime","getTime","Date","now","max","floor","hasProtocol","URL","EncryptionType","regexpEmojiPresentation","originalMinimumPasswordLength","minimumPasswordLength","DomainMatchBlacklist","Set","EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE","AesCbc256_B64","AesCbc128_HmacSha256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","FileUploadType","HashPurpose","HtmlStorageLocation","PBKDF2KdfConfig","constructor","iterations","kdfType","PBKDF2_SHA256","PBKDF2_ITERATIONS","defaultValue","validateKdfConfig","inRange","min","fromJSON","json","RangeWithDefault","value","KdfType","KeySuffixOptions","LogLevelType","StorageLocation","ThemeType","SymmetricCryptoKey","key","encType","encKey","macKey","keyB64","encKeyB64","macKeyB64","toJSON","fromString","ConsoleLogService","isDev","timersMap","debug","message","optionalParams","write","Debug","info","Info","warning","Warning","error","level","console","log","warn","ContainerService","cryptoService","encryptService","attachToGlobal","getCryptoService","getEncryptService","DecryptParameters","WebCryptoFunctionService","globalContext","crypto","subtle","wasmSupported","checkIfWasmSupported","pbkdf2","password","salt","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","argon2","memory","parallelism","passwordArr","saltArr","result","pass","time","mem","hashLen","type","ArgonType","Argon2id","unloadRuntime","hkdf","ikm","outputByteSize","hkdfParams","hkdfExpand","prk","infoBuf","infoArr","runningOkmLength","previousT","n","ceil","okm","t","hmac","md","md5","create","valueBytes","toByteString","update","digest","data","valueBuf","signingAlgorithm","sign","randomBytes","mac1","mac2","arr1","arr2","hmacFast","start","getBytes","compareFast","rand","Uint32Array","createBuffer","putInt32","aesEncrypt","iv","encrypt","aesDecryptFastParameters","mac","p","meta","encKeyByteString","macKeyByteString","decode64","macData","aesDecryptFast","parameters","mode","decipher","createDecipher","toWebCryptoAesMode","options","dataBuffer","finish","val","aesDecrypt","params","decrypt","rsaEncrypt","publicKey","rsaParams","rsaDecrypt","privateKey","rsaExtractPublicKey","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","alg","ext","impPublicKey","aesGenerateKey","bitLength","key1","key2","aesParams","generateKey","rawKey","rsaGenerateKeyPair","modulusLength","publicExponent","keyPair","getRandomValues","buf","encodeUtf8","WebAssembly","instantiate","module","Module","Instance","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","fromResponse","response","fromB64","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","encryptedString","encPieces","parseEncryptedString","headerPieces","NaN","isSerializedEncString","orgId","decryptedValue","getKeyForDecryption","decryptToUtf8","getOrgKey","getUserKeyWithLegacySupport","EncryptedObject","EncryptServiceImplementation","cryptoFunctionService","logService","logMacFailures","plainValue","plainBuf","encObj","encryptToBytes","encValue","macLen","encString","resolveLegacyKey","fastParams","computedMac","logMacFailed","decryptToBytes","encThing","encrypted","decryptItems","items","results","push","hashArray","msg","InitializerKey","CipherType","CipherRepromptType","FieldType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SecureNoteType","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","then","mapProp","all","AttachmentData","fileName","size","sizeName","CardData","cardholderName","brand","number","expMonth","expYear","code","FieldData","linkedId","IdentityData","title","firstName","middleName","lastName","address1","address2","address3","city","state","postalCode","country","company","email","phone","ssn","username","passportNumber","licenseNumber","Fido2CredentialData","credentialId","keyType","keyAlgorithm","keyCurve","keyValue","rpId","userHandle","userName","counter","rpName","userDisplayName","discoverable","creationDate","LoginUriData","uri","uriChecksum","LoginData","passwordRevisionDate","totp","autofillOnPageLoad","uris","u","fido2Credentials","PasswordHistoryData","lastUsedDate","SecureNoteData","CipherData","collectionIds","organizationId","folderId","edit","viewPassword","organizationUseTotp","favorite","revisionDate","notes","deletedDate","reprompt","Login","login","SecureNote","secureNote","Card","card","Identity","identity","fields","f","attachments","passwordHistory","ph","AttachmentView","fileSize","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","year","getCardBrandByPatterns","cardNum","re","CardholderName","ExpMonth","ExpYear","Code","Brand","FieldView","newField","showValue","showCount","maskedValue","IdentityView","super","_firstName","_lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","Title","MiddleName","Address1","Address2","Address3","City","State","PostalCode","Country","Company","Email","Phone","Ssn","Username","PassportNumber","LicenseNumber","FirstName","LastName","FullName","Fido2CredentialView","UriMatchStrategy","CanLaunchWhitelist","SafeUrls","canLaunch","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","isWebsite","launchUri","matchesUri","targetUri","equivalentDomains","defaultUriMatch","matchType","targetDomain","matchDomains","add","matchesDomain","urlHost","has","domainUrlHost","get","LoginView","l","hasUris","maskedPassword","some","hasTotp","find","hasFido2Credentials","Password","PasswordHistoryView","SecureNoteView","CipherView","initializerKey","None","localData","item","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","isUnassigned","linkedFieldValue","linkedFieldI18nKey","view","Attachment","decryptAttachmentKey","decValue","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","Fido2Credential","toFido2CredentialData","toISOString","LoginUri","validateChecksum","clearTextUri","localChecksum","toLoginUriData","bypassValidation","toLoginData","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","attachment","decAttachment","field","decField","decPh","toCipherData","classInitializers","workerApi","addEventListener","event","request","JSON","parse","jsonItem","className","postMessage","stringify","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","loaded","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getPrototypeOf","__proto__","__esModule","ns","def","current","getOwnPropertyNames","d","definition","o","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","Symbol","toStringTag","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}