{"version":3,"file":"554.e82b45b7ffbc0fe7ce5c.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/auth/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings.module.ts"],"sourcesContent":["import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<app-header></app-header>\n\n<bit-container>\n  <div *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <form *ngIf=\"org && !loading\" [bitSubmit]=\"submit\" [formGroup]=\"formGroup\">\n    <div class=\"tw-grid tw-grid-cols-2 tw-gap-5\">\n      <div>\n        <bit-form-field>\n          <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n          <input bitInput id=\"orgName\" type=\"text\" formControlName=\"orgName\" />\n        </bit-form-field>\n        <bit-form-field>\n          <bit-label>{{ \"email\" | i18n }}</bit-label>\n          <input bitInput id=\"billingEmail\" formControlName=\"billingEmail\" type=\"email\" />\n        </bit-form-field>\n      </div>\n      <div>\n        <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n        <app-account-fingerprint\n          [fingerprintMaterial]=\"organizationId\"\n          [publicKeyBuffer]=\"publicKeyBuffer\"\n          fingerprintLabel=\"{{ 'yourOrganizationsFingerprint' | i18n }}\"\n        >\n        </app-account-fingerprint>\n      </div>\n    </div>\n    <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n      {{ \"save\" | i18n }}\n    </button>\n  </form>\n  <ng-container *ngIf=\"canUseApi\">\n    <h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5\">{{ \"apiKey\" | i18n }}</h1>\n    <p>\n      {{ \"apiKeyDesc\" | i18n }}\n      <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noreferrer\">\n        {{ \"learnMore\" | i18n }}\n      </a>\n    </p>\n    <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"viewApiKey()\">\n      {{ \"viewApiKey\" | i18n }}\n    </button>\n    <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"rotateApiKey()\">\n      {{ \"rotateApiKey\" | i18n }}\n    </button>\n  </ng-container>\n  <form\n    *ngIf=\"org && !loading && org.flexibleCollections\"\n    [bitSubmit]=\"submitCollectionManagement\"\n    [formGroup]=\"collectionManagementFormGroup\"\n  >\n    <h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5\">{{ \"collectionManagement\" | i18n }}</h1>\n    <p>{{ \"collectionManagementDesc\" | i18n }}</p>\n    <bit-form-control *ngIf=\"flexibleCollectionsV1Enabled$ | async\">\n      <bit-label>{{ \"allowAdminAccessToAllCollectionItemsDesc\" | i18n }}</bit-label>\n      <input type=\"checkbox\" bitCheckbox formControlName=\"allowAdminAccessToAllCollectionItems\" />\n    </bit-form-control>\n    <bit-form-control>\n      <bit-label>{{ \"limitCollectionCreationDeletionDesc\" | i18n }}</bit-label>\n      <input type=\"checkbox\" bitCheckbox formControlName=\"limitCollectionCreationDeletion\" />\n    </bit-form-control>\n    <button\n      *ngIf=\"!selfHosted\"\n      type=\"submit\"\n      bitButton\n      bitFormButton\n      buttonType=\"primary\"\n      id=\"collectionManagementSubmitButton\"\n    >\n      {{ \"save\" | i18n }}\n    </button>\n  </form>\n\n  <app-danger-zone>\n    <button type=\"button\" bitButton buttonType=\"danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" bitButton buttonType=\"danger\" [bitAction]=\"purgeVault\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </app-danger-zone>\n\n  <ng-template #apiKeyTemplate></ng-template>\n  <ng-template #rotateApiKeyTemplate></ng-template>\n</bit-container>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { combineLatest, from, lastValueFrom, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationCollectionManagementUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-collection-management-update.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/admin-console/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/admin-console/models/response/organization.response\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\nimport { CryptoService } from \"@bitwarden/common/platform/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { Utils } from \"@bitwarden/common/platform/misc/utils\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { ApiKeyComponent } from \"../../../auth/settings/security/api-key.component\";\nimport { PurgeVaultComponent } from \"../../../vault/settings/purge-vault.component\";\n\nimport { DeleteOrganizationDialogResult, openDeleteOrganizationDialog } from \"./components\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canEditSubscription = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  taxFormPromise: Promise<unknown>;\n\n  flexibleCollectionsV1Enabled$ = this.configService.getFeatureFlag$(\n    FeatureFlag.FlexibleCollectionsV1,\n  );\n\n  // FormGroup validators taken from server Organization domain object\n  protected formGroup = this.formBuilder.group({\n    orgName: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      {\n        validators: [Validators.required, Validators.maxLength(50)],\n        updateOn: \"change\",\n      },\n    ),\n    billingEmail: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      { validators: [Validators.required, Validators.email, Validators.maxLength(256)] },\n    ),\n  });\n\n  protected collectionManagementFormGroup = this.formBuilder.group({\n    limitCollectionCreationDeletion: this.formBuilder.control({ value: false, disabled: true }),\n    allowAdminAccessToAllCollectionItems: this.formBuilder.control({\n      value: false,\n      disabled: true,\n    }),\n  });\n\n  protected organizationId: string;\n  protected publicKeyBuffer: Uint8Array;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private dialogService: DialogService,\n    private formBuilder: FormBuilder,\n    private configService: ConfigService,\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = false; // set to false so we can rename organizations\n\n    this.route.params\n      .pipe(\n        switchMap((params) => this.organizationService.get$(params.organizationId)),\n        switchMap((organization) => {\n          return combineLatest([\n            of(organization),\n            // OrganizationResponse for form population\n            from(this.organizationApiService.get(organization.id)),\n            // Organization Public Key\n            from(this.organizationApiService.getKeys(organization.id)),\n          ]);\n        }),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(([organization, orgResponse, orgKeys]) => {\n        // Set domain level organization variables\n        this.organizationId = organization.id;\n        this.canEditSubscription = organization.canEditSubscription;\n        this.canUseApi = organization.useApi;\n\n        // Update disabled states - reactive forms prefers not using disabled attribute\n        if (!this.selfHosted) {\n          this.formGroup.get(\"orgName\").enable();\n          this.collectionManagementFormGroup.get(\"limitCollectionCreationDeletion\").enable();\n          this.collectionManagementFormGroup.get(\"allowAdminAccessToAllCollectionItems\").enable();\n        }\n\n        if (!this.selfHosted && this.canEditSubscription) {\n          this.formGroup.get(\"billingEmail\").enable();\n        }\n\n        // Org Response\n        this.org = orgResponse;\n\n        // Public Key Buffer for Org Fingerprint Generation\n        this.publicKeyBuffer = Utils.fromB64ToArray(orgKeys?.publicKey);\n\n        // Patch existing values\n        this.formGroup.patchValue({\n          orgName: this.org.name,\n          billingEmail: this.org.billingEmail,\n        });\n        this.collectionManagementFormGroup.patchValue({\n          limitCollectionCreationDeletion: this.org.limitCollectionCreationDeletion,\n          allowAdminAccessToAllCollectionItems: this.org.allowAdminAccessToAllCollectionItems,\n        });\n\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy(): void {\n    // You must first call .next() in order for the notifier to properly close subscriptions using takeUntil\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  submit = async () => {\n    this.formGroup.markAllAsTouched();\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const request = new OrganizationUpdateRequest();\n    request.name = this.formGroup.value.orgName;\n    request.billingEmail = this.formGroup.value.billingEmail;\n\n    // Backfill pub/priv key if necessary\n    if (!this.org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    await this.organizationApiService.save(this.organizationId, request);\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"organizationUpdated\"));\n  };\n\n  submitCollectionManagement = async () => {\n    return; // flexible collections are not supported by Vaultwarden\n    // Early exit if self-hosted\n    if (this.selfHosted) {\n      return;\n    }\n\n    const request = new OrganizationCollectionManagementUpdateRequest();\n    request.limitCreateDeleteOwnerAdmin =\n      this.collectionManagementFormGroup.value.limitCollectionCreationDeletion;\n    request.allowAdminAccessToAllCollectionItems =\n      this.collectionManagementFormGroup.value.allowAdminAccessToAllCollectionItems;\n\n    await this.organizationApiService.updateCollectionManagement(this.organizationId, request);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"updatedCollectionManagement\"),\n    );\n  };\n\n  async deleteOrganization() {\n    const dialog = openDeleteOrganizationDialog(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n        requestType: \"RegularDelete\",\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n\n    if (result === DeleteOrganizationDialogResult.Deleted) {\n      // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.router.navigate([\"/\"]);\n    }\n  }\n\n  purgeVault = async () => {\n    const dialogRef = PurgeVaultComponent.open(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n      },\n    });\n    await lastValueFrom(dialogRef.closed);\n  };\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService,\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<app-header *ngIf=\"organizationId != null\"></app-header>\n\n<bit-container>\n  <div class=\"tabbed-header\" *ngIf=\"organizationId == null\">\n    <h1 *ngIf=\"!organizationId || !isEnterpriseOrg\">{{ \"twoStepLogin\" | i18n }}</h1>\n    <h1 *ngIf=\"organizationId && isEnterpriseOrg\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n  </div>\n\n  <p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n  <ng-container *ngIf=\"organizationId\">\n    <p>\n      <ng-container *ngIf=\"isEnterpriseOrg; else teamsDescription\">\n        {{ \"twoStepLoginEnterpriseDescStart\" | i18n }}\n        <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n        <br />\n        {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n        <br />\n        <br />\n        <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n      </ng-container>\n      <ng-template #teamsDescription>\n        {{ \"twoStepLoginTeamsDesc\" | i18n }}\n        <br />\n        {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n      </ng-template>\n    </p>\n  </ng-container>\n  <bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n    <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n    <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n      {{ \"viewRecoveryCode\" | i18n }}\n    </button>\n  </bit-callout>\n  <h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n    {{ \"providers\" | i18n }}\n    <small *ngIf=\"loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h2>\n  <bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n    {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n  </bit-callout>\n  <ul class=\"list-group list-group-2fa\">\n    <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n      <div class=\"logo-2fa d-flex justify-content-center\">\n        <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n      </div>\n      <div class=\"mx-4\">\n        <h3 class=\"mb-0\">\n          {{ p.name }}\n          <ng-container *ngIf=\"p.enabled\">\n            <i\n              class=\"bwi bwi-check text-success bwi-fw\"\n              title=\"{{ 'enabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n          </ng-container>\n          <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n        </h3>\n        {{ p.description }}\n      </div>\n      <div class=\"ml-auto\">\n        <button\n          type=\"button\"\n          bitButton\n          buttonType=\"secondary\"\n          [disabled]=\"!(canAccessPremium$ | async) && p.premium\"\n          (click)=\"manage(p.type)\"\n        >\n          {{ \"manage\" | i18n }}\n        </button>\n      </div>\n    </li>\n  </ul>\n</bit-container>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, takeUntil, map } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/auth/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\nimport { BillingAccountProfileStateService } from \"@bitwarden/common/billing/abstractions/account/billing-account-profile-state.service\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { TwoFactorDuoComponent } from \"../../../auth/settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../../auth/settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../../auth/settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  tabbedHeader = false;\n  constructor(\n    dialogService: DialogService,\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    billingAccountProfileStateService: BillingAccountProfileStateService,\n  ) {\n    super(\n      dialogService,\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      billingAccountProfileStateService,\n    );\n  }\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap((params) =>\n          this.organizationService\n            .get$(params.organizationId)\n            .pipe(map((organization) => ({ params, organization }))),\n        ),\n        tap(async (mapResponse) => {\n          this.organizationId = mapResponse.params.organizationId;\n          this.organization = mapResponse.organization;\n        }),\n        concatMap(async () => await super.ngOnInit()),\n        takeUntil(this.destroy$),\n      )\n      .subscribe();\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const result: AuthResponse<TwoFactorDuoResponse> = await this.callTwoFactorVerifyDialog(\n          TwoFactorProviderType.OrganizationDuo,\n        );\n\n        if (!result) {\n          return;\n        }\n\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.auth(result);\n        duoComp.onUpdated.pipe(takeUntil(this.destroy$)).subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../organizations/guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../../organizations/guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        children: [\n          {\n            path: \"import\",\n            loadComponent: () =>\n              import(\"./org-import.component\").then((mod) => mod.OrgImportComponent),\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"importData\",\n              organizationPermissions: (org: Organization) => org.canAccessImportExport,\n            },\n          },\n          {\n            path: \"export\",\n            loadChildren: () =>\n              import(\"../tools/vault-export/org-vault-export.module\").then(\n                (m) => m.OrganizationVaultExportModule,\n              ),\n            data: {\n              titleId: \"exportVault\",\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  if (organization.canManageDeviceApprovals) {\n    return \"device-approvals\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../shared\";\nimport { AccountFingerprintComponent } from \"../../../shared/components/account-fingerprint/account-fingerprint.component\";\nimport { PoliciesModule } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    PoliciesModule,\n    OrganizationSettingsRoutingModule,\n    AccountFingerprintComponent,\n  ],\n  declarations: [AccountComponent, TwoFactorSetupComponent],\n})\nexport class OrganizationSettingsModule {}\n"],"names":["OrganizationUpdateRequest","viewApiKey","rotateApiKey","AccountComponent","constructor","modalService","i18nService","route","platformUtilsService","cryptoService","router","organizationService","organizationApiService","dialogService","formBuilder","configService","selfHosted","canEditSubscription","loading","canUseApi","flexibleCollectionsV1Enabled$","this","getFeatureFlag$","FlexibleCollectionsV1","formGroup","group","orgName","control","value","disabled","validators","required","maxLength","updateOn","billingEmail","email","collectionManagementFormGroup","limitCollectionCreationDeletion","allowAdminAccessToAllCollectionItems","destroy$","Subject","submit","markAllAsTouched","invalid","request","name","org","hasPublicAndPrivateKeys","orgShareKey","getOrgKey","organizationId","orgKeys","makeKeyPair","keys","encryptedString","save","showToast","t","submitCollectionManagement","purgeVault","dialogRef","open","data","lastValueFrom","closed","ngOnInit","params","pipe","switchMap","get$","organization","combineLatest","of","from","get","id","getKeys","takeUntil","subscribe","orgResponse","useApi","enable","publicKeyBuffer","fromB64ToArray","publicKey","patchValue","ngOnDestroy","next","complete","deleteOrganization","dialog","requestType","Deleted","navigate","openViewRef","apiKeyModalRef","comp","keyType","entityId","postKey","getOrCreateApiKey","bind","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","apiService","messagingService","policyService","billingAccountProfileStateService","super","tabbedHeader","concatMap","map","tap","mapResponse","type","OrganizationDuo","result","callTwoFactorVerifyDialog","duoComp","openModal","duoModalRef","auth","onUpdated","enabled","updateStatus","getTwoFactorProviders","getTwoFactorOrganizationProviders","filterProvider","routes","path","canActivate","organizationPermissions","children","pathMatch","autoRedirectCallback","isOwner","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","canManageDeviceApprovals","component","titleId","loadComponent","then","mod","OrgImportComponent","loadChildren","m","OrganizationVaultExportModule","OrganizationSettingsRoutingModule","forChild","OrganizationSettingsModule"],"sourceRoot":""}